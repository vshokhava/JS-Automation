{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2020-06-11T06:37:35.616Z",
    "end": "2020-06-11T06:37:36.342Z",
    "duration": 726,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "13ead3a9-06af-4782-9673-d084c32a68d5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd15eda7-1908-4b47-9911-14354991ae0b",
          "title": "Test to verify an http status code",
          "fullFile": "C:\\Users\\Vasilisa_Shokhava\\JS-Automation\\Module12_WebServices\\test\\tests.js",
          "file": "\\test\\tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "response status code should be 200",
              "fullTitle": "Test to verify an http status code response status code should be 200",
              "timedOut": false,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get('https://jsonplaceholder.typicode.com/users');\nexpect(res.status).to.equal(200);",
              "err": {},
              "uuid": "f79157c8-5c08-4fd5-9531-aa804df6f1e8",
              "parentUUID": "cd15eda7-1908-4b47-9911-14354991ae0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "response status text should be OK",
              "fullTitle": "Test to verify an http status code response status text should be OK",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get('https://jsonplaceholder.typicode.com/users');\nexpect(res.statusText).to.equal('OK');",
              "err": {},
              "uuid": "c731b80c-b0b9-4832-8ff1-3fa34961e17d",
              "parentUUID": "cd15eda7-1908-4b47-9911-14354991ae0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f79157c8-5c08-4fd5-9531-aa804df6f1e8",
            "c731b80c-b0b9-4832-8ff1-3fa34961e17d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 316,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8bd1f0f5-4bd3-4161-bafa-9b83cdcf58f8",
          "title": "Test to verify an http response",
          "fullFile": "C:\\Users\\Vasilisa_Shokhava\\JS-Automation\\Module12_WebServices\\test\\tests.js",
          "file": "\\test\\tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "the content-type header exists in the obtained response",
              "fullTitle": "Test to verify an http response the content-type header exists in the obtained response",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    expect(Object.keys(response.headers)).to.include('content-type');",
              "err": {},
              "uuid": "606bd8ff-ffc5-415e-bfbe-7a6eefe7c626",
              "parentUUID": "8bd1f0f5-4bd3-4161-bafa-9b83cdcf58f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "the value of the content-type header is application/json; charset=utf-8",
              "fullTitle": "Test to verify an http response the value of the content-type header is application/json; charset=utf-8",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://jsonplaceholder.typicode.com/users');\nexpect(response.headers['content-type']).to.equal('application/json; charset=utf-8');",
              "err": {},
              "uuid": "6a697a19-3b54-4270-897f-789b6e67ba5d",
              "parentUUID": "8bd1f0f5-4bd3-4161-bafa-9b83cdcf58f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "606bd8ff-ffc5-415e-bfbe-7a6eefe7c626",
            "6a697a19-3b54-4270-897f-789b6e67ba5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "05dc0f9f-b41a-48f8-a39f-578c0c1d92b7",
          "title": "Test to verify array of users",
          "fullFile": "C:\\Users\\Vasilisa_Shokhava\\JS-Automation\\Module12_WebServices\\test\\tests.js",
          "file": "\\test\\tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "the content of the response body is the array",
              "fullTitle": "Test to verify array of users the content of the response body is the array",
              "timedOut": false,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    expect(response.data).to.be.an('array');",
              "err": {},
              "uuid": "321084bd-9c60-439d-8deb-419679c86818",
              "parentUUID": "05dc0f9f-b41a-48f8-a39f-578c0c1d92b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "array of users has 10 items",
              "fullTitle": "Test to verify array of users array of users has 10 items",
              "timedOut": false,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n      expect(response.data.length).to.equal(10);",
              "err": {},
              "uuid": "2fb345f1-3f8f-4fb6-a814-42167ab799af",
              "parentUUID": "05dc0f9f-b41a-48f8-a39f-578c0c1d92b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "321084bd-9c60-439d-8deb-419679c86818",
            "2fb345f1-3f8f-4fb6-a814-42167ab799af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "serviceTests",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "serviceTests"
      },
      "version": "5.1.0"
    }
  }
}